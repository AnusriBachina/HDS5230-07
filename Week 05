{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOBL5YWbbSXDz8zyxM28YfY",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AnusriBachina/HDS5230-07/blob/main/Week%2005\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Name: Anusri Bachina\n",
        "\n",
        "Course Number: HDS-5230-07\n",
        "\n",
        "Assignment Number: Week 05"
      ],
      "metadata": {
        "id": "N4Ta1hRX5sFx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pandas\n",
        "!pip install dask\n",
        "!pip install numpy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "CIfn7LzhxQno",
        "outputId": "2365f4cb-9b84-47b3-c74f-1933d9a4952a"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n",
            "Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (1.26.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.1)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)\n",
            "Requirement already satisfied: dask in /usr/local/lib/python3.11/dist-packages (2024.10.0)\n",
            "Requirement already satisfied: click>=8.1 in /usr/local/lib/python3.11/dist-packages (from dask) (8.1.8)\n",
            "Requirement already satisfied: cloudpickle>=3.0.0 in /usr/local/lib/python3.11/dist-packages (from dask) (3.1.1)\n",
            "Requirement already satisfied: fsspec>=2021.09.0 in /usr/local/lib/python3.11/dist-packages (from dask) (2024.10.0)\n",
            "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from dask) (24.2)\n",
            "Requirement already satisfied: partd>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from dask) (1.4.2)\n",
            "Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.11/dist-packages (from dask) (6.0.2)\n",
            "Requirement already satisfied: toolz>=0.10.0 in /usr/local/lib/python3.11/dist-packages (from dask) (0.12.1)\n",
            "Requirement already satisfied: importlib-metadata>=4.13.0 in /usr/local/lib/python3.11/dist-packages (from dask) (8.6.1)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib-metadata>=4.13.0->dask) (3.21.0)\n",
            "Requirement already satisfied: locket in /usr/local/lib/python3.11/dist-packages (from partd>=1.4.0->dask) (1.0.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (1.26.4)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from IPython import get_ipython\n",
        "from IPython.display import display\n",
        "import pandas as pd\n",
        "import dask.dataframe as dd\n",
        "import numpy as np\n",
        "from datetime import datetime"
      ],
      "metadata": {
        "id": "wiVMGrSyyUzf"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dtypes = {\n",
        "    'aggregate': 'object',\n",
        "    'cases': 'float64',\n",
        "    'city': 'object',\n",
        "    'population': 'float64',\n",
        "    'deaths': 'float64',\n",
        "    'country': 'object',\n",
        "    'state': 'object',\n",
        "    'date': 'object'\n",
        "}"
      ],
      "metadata": {
        "id": "lOB19NalwhVg"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Read the file\n",
        "df = pd.read_csv(\"timeseries.csv\", dtype=dtypes, low_memory=False)"
      ],
      "metadata": {
        "id": "9Z-kyerOwkDM"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert the pandas dataframe to a dask dataframe.\n",
        "df = dd.from_pandas(df, npartitions=2)\n",
        "\n",
        "# Convert 'date' column to datetime format\n",
        "df['date'] = dd.to_datetime(df['date'], errors='coerce')"
      ],
      "metadata": {
        "id": "EH9MPzMXwvEE"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Filter for US states only and state-level data\n",
        "us_df = df[(df['country'] == 'United States') & (df['aggregate'] == 'state')]\n",
        "\n",
        "# Display the first few rows\n",
        "us_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 429
        },
        "id": "B_p1uhvew2wr",
        "outputId": "cd6af46b-7385-458a-b81b-35f5e9519792"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                          name  level  city county     state        country  \\\n",
              "37985  Virginia, United States  state  <NA>   <NA>  Virginia  United States   \n",
              "37986  Virginia, United States  state  <NA>   <NA>  Virginia  United States   \n",
              "37987  Virginia, United States  state  <NA>   <NA>  Virginia  United States   \n",
              "37988  Virginia, United States  state  <NA>   <NA>  Virginia  United States   \n",
              "37989  Virginia, United States  state  <NA>   <NA>  Virginia  United States   \n",
              "\n",
              "       population      lat     long  \\\n",
              "37985   8535519.0  38.0035 -79.4585   \n",
              "37986   8535519.0  38.0035 -79.4585   \n",
              "37987   8535519.0  38.0035 -79.4585   \n",
              "37988   8535519.0  38.0035 -79.4585   \n",
              "37989   8535519.0  38.0035 -79.4585   \n",
              "\n",
              "                                                     url  ... recovered  \\\n",
              "37985  https://covidtracking.com/api/v1/states/curren...  ...       NaN   \n",
              "37986  https://covidtracking.com/api/v1/states/curren...  ...       NaN   \n",
              "37987  https://covidtracking.com/api/v1/states/curren...  ...       NaN   \n",
              "37988  https://covidtracking.com/api/v1/states/curren...  ...       NaN   \n",
              "37989  https://covidtracking.com/api/v1/states/curren...  ...       NaN   \n",
              "\n",
              "      active  tested  hospitalized  hospitalized_current  discharged  icu  \\\n",
              "37985    NaN     NaN           NaN                   NaN         NaN  NaN   \n",
              "37986    NaN     NaN           NaN                   NaN         NaN  NaN   \n",
              "37987    NaN     NaN           NaN                   NaN         NaN  NaN   \n",
              "37988    NaN     NaN           NaN                   NaN         NaN  NaN   \n",
              "37989    NaN     NaN           NaN                   NaN         NaN  NaN   \n",
              "\n",
              "       icu_current  growthFactor       date  \n",
              "37985          NaN           NaN 2020-03-22  \n",
              "37986          NaN          1.15 2020-03-23  \n",
              "37987          NaN          1.13 2020-03-24  \n",
              "37988          NaN          1.34 2020-03-25  \n",
              "37989          NaN          1.51 2020-03-26  \n",
              "\n",
              "[5 rows x 24 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c7afb4cf-e322-4308-82b3-28785a934680\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>level</th>\n",
              "      <th>city</th>\n",
              "      <th>county</th>\n",
              "      <th>state</th>\n",
              "      <th>country</th>\n",
              "      <th>population</th>\n",
              "      <th>lat</th>\n",
              "      <th>long</th>\n",
              "      <th>url</th>\n",
              "      <th>...</th>\n",
              "      <th>recovered</th>\n",
              "      <th>active</th>\n",
              "      <th>tested</th>\n",
              "      <th>hospitalized</th>\n",
              "      <th>hospitalized_current</th>\n",
              "      <th>discharged</th>\n",
              "      <th>icu</th>\n",
              "      <th>icu_current</th>\n",
              "      <th>growthFactor</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>37985</th>\n",
              "      <td>Virginia, United States</td>\n",
              "      <td>state</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>United States</td>\n",
              "      <td>8535519.0</td>\n",
              "      <td>38.0035</td>\n",
              "      <td>-79.4585</td>\n",
              "      <td>https://covidtracking.com/api/v1/states/curren...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2020-03-22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37986</th>\n",
              "      <td>Virginia, United States</td>\n",
              "      <td>state</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>United States</td>\n",
              "      <td>8535519.0</td>\n",
              "      <td>38.0035</td>\n",
              "      <td>-79.4585</td>\n",
              "      <td>https://covidtracking.com/api/v1/states/curren...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.15</td>\n",
              "      <td>2020-03-23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37987</th>\n",
              "      <td>Virginia, United States</td>\n",
              "      <td>state</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>United States</td>\n",
              "      <td>8535519.0</td>\n",
              "      <td>38.0035</td>\n",
              "      <td>-79.4585</td>\n",
              "      <td>https://covidtracking.com/api/v1/states/curren...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.13</td>\n",
              "      <td>2020-03-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37988</th>\n",
              "      <td>Virginia, United States</td>\n",
              "      <td>state</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>United States</td>\n",
              "      <td>8535519.0</td>\n",
              "      <td>38.0035</td>\n",
              "      <td>-79.4585</td>\n",
              "      <td>https://covidtracking.com/api/v1/states/curren...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.34</td>\n",
              "      <td>2020-03-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37989</th>\n",
              "      <td>Virginia, United States</td>\n",
              "      <td>state</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>Virginia</td>\n",
              "      <td>United States</td>\n",
              "      <td>8535519.0</td>\n",
              "      <td>38.0035</td>\n",
              "      <td>-79.4585</td>\n",
              "      <td>https://covidtracking.com/api/v1/states/curren...</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.51</td>\n",
              "      <td>2020-03-26</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c7afb4cf-e322-4308-82b3-28785a934680')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c7afb4cf-e322-4308-82b3-28785a934680 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c7afb4cf-e322-4308-82b3-28785a934680');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-563bad7f-fa5b-43f3-ab58-d6efc16cdf42\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-563bad7f-fa5b-43f3-ab58-d6efc16cdf42')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-563bad7f-fa5b-43f3-ab58-d6efc16cdf42 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Using a parallelized or distributed approach is beneficial for filtering US state-level data because filtering operations are independent for each row. Dask efficiently processes large datasets by splitting them into smaller chunks and executing operations in parallel. This reduces memory overhead and speeds up processing, especially when working with extensive global COVID-19 datasets.         \n",
        "\n",
        "\n",
        "First, I have loaded a COVID-19 dataset using Dask for efficient handling of large data. The dataset contains global records, so filter it to include only state-level data from the United States by selecting rows where \"country\" == 'United States' and \"aggregate\" == 'state'. The date column is converted to a datetime format for proper time-based operations. And applied filtering efficiently without loading everything into memory. This ensures scalable data processing, making it easier to perform subsequent analyses on US state-level data.\n"
      ],
      "metadata": {
        "id": "juvjN57Mw-X5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Date range\n",
        "start_date = '2020-01-01'\n",
        "end_date = '2021-02-28'\n",
        "\n",
        "# Filter dataset for the specific time period\n",
        "period_df = us_df[(us_df['date'] >= start_date) & (us_df['date'] <= end_date)]\n",
        "\n",
        "# Aggregate data: sum of deaths, mean population per state\n",
        "state_metrics = period_df.groupby('state').agg({\n",
        "    'deaths': 'sum',\n",
        "    'population': 'mean'\n",
        "})\n",
        "\n",
        "# Compute the results\n",
        "state_metrics = state_metrics.compute()\n",
        "\n",
        "# Compute per-capita mortality\n",
        "state_metrics['per_capita_mortality'] = state_metrics['deaths'] / state_metrics['population']\n",
        "\n",
        "# Rank states based on per-capita mortality\n",
        "state_metrics['mortality_rank'] = state_metrics['per_capita_mortality'].rank(ascending=False)\n",
        "\n",
        "# Sort and display the rankings\n",
        "print(state_metrics.sort_values('mortality_rank'))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7xPkkhb8w7AU",
        "outputId": "7305edce-e1d2-43a0-b661-11cc0ebada6b"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                 deaths  population  per_capita_mortality  \\\n",
            "state                                                                       \n",
            "New Jersey                     861317.0   8882190.0              0.096971   \n",
            "Connecticut                    277777.0   3565287.0              0.077912   \n",
            "Massachusetts                  482980.0   6892503.0              0.070073   \n",
            "New York                      1358824.0  19453561.0              0.069850   \n",
            "Louisiana                      213399.0   4648794.0              0.045904   \n",
            "Washington, D.C.                32225.0    705749.0              0.045661   \n",
            "Rhode Island                    46435.0   1059361.0              0.043833   \n",
            "Michigan                       419841.0   9986857.0              0.042039   \n",
            "Pennsylvania                   378963.0  12801989.0              0.029602   \n",
            "Maryland                       175443.0   6045680.0              0.029020   \n",
            "Delaware                        25878.0    973764.0              0.026575   \n",
            "Mississippi                     52399.0   2976149.0              0.017606   \n",
            "Georgia                        155394.0  10617423.0              0.014636   \n",
            "Ohio                           154003.0  11689100.0              0.013175   \n",
            "New Hampshire                   17373.0   1359711.0              0.012777   \n",
            "Minnesota                       71447.0   5639632.0              0.012669   \n",
            "Washington                      92668.0   7614893.0              0.012169   \n",
            "New Mexico                      24629.0   2096829.0              0.011746   \n",
            "Iowa                            35896.0   3155070.0              0.011377   \n",
            "Virginia                        93598.0   8535519.0              0.010966   \n",
            "Nevada                          31220.0   3080156.0              0.010136   \n",
            "Alabama                         46778.0   4903185.0              0.009540   \n",
            "Missouri                        53833.0   6137428.0              0.008771   \n",
            "Wisconsin                       44411.0   5822434.0              0.007628   \n",
            "Vermont                          4547.0    623989.0              0.007287   \n",
            "South Carolina                  37414.0   5148714.0              0.007267   \n",
            "Oklahoma                        25484.0   3956971.0              0.006440   \n",
            "North Carolina                  66131.0  10488084.0              0.006305   \n",
            "Kansas                          16352.0   2913314.0              0.005613   \n",
            "North Dakota                     4217.0    762062.0              0.005534   \n",
            "Maine                            6575.0   1344212.0              0.004891   \n",
            "South Dakota                     4202.0    884659.0              0.004750   \n",
            "Arizona                         34469.0   7278717.0              0.004736   \n",
            "Tennessee                       30189.0   6829174.0              0.004421   \n",
            "Texas                          125448.0  28995881.0              0.004326   \n",
            "Arkansas                        11456.0   3017804.0              0.003796   \n",
            "Idaho                            6398.0   1787065.0              0.003580   \n",
            "West Virginia                    5469.0   1792147.0              0.003052   \n",
            "Oregon                          12575.0   4217737.0              0.002981   \n",
            "Utah                             8190.0   3205958.0              0.002555   \n",
            "United States Virgin Islands      248.0    104901.0              0.002364   \n",
            "Northern Mariana Islands          106.0     55144.0              0.001922   \n",
            "Wyoming                          1032.0    578759.0              0.001783   \n",
            "Puerto Rico                      5696.0   3411307.0              0.001670   \n",
            "Guam                              266.0    167772.0              0.001585   \n",
            "Montana                          1398.0   1068778.0              0.001308   \n",
            "Alaska                            824.0    731545.0              0.001126   \n",
            "American Samoa                      0.0     55689.0              0.000000   \n",
            "\n",
            "                              mortality_rank  \n",
            "state                                         \n",
            "New Jersey                               1.0  \n",
            "Connecticut                              2.0  \n",
            "Massachusetts                            3.0  \n",
            "New York                                 4.0  \n",
            "Louisiana                                5.0  \n",
            "Washington, D.C.                         6.0  \n",
            "Rhode Island                             7.0  \n",
            "Michigan                                 8.0  \n",
            "Pennsylvania                             9.0  \n",
            "Maryland                                10.0  \n",
            "Delaware                                11.0  \n",
            "Mississippi                             12.0  \n",
            "Georgia                                 13.0  \n",
            "Ohio                                    14.0  \n",
            "New Hampshire                           15.0  \n",
            "Minnesota                               16.0  \n",
            "Washington                              17.0  \n",
            "New Mexico                              18.0  \n",
            "Iowa                                    19.0  \n",
            "Virginia                                20.0  \n",
            "Nevada                                  21.0  \n",
            "Alabama                                 22.0  \n",
            "Missouri                                23.0  \n",
            "Wisconsin                               24.0  \n",
            "Vermont                                 25.0  \n",
            "South Carolina                          26.0  \n",
            "Oklahoma                                27.0  \n",
            "North Carolina                          28.0  \n",
            "Kansas                                  29.0  \n",
            "North Dakota                            30.0  \n",
            "Maine                                   31.0  \n",
            "South Dakota                            32.0  \n",
            "Arizona                                 33.0  \n",
            "Tennessee                               34.0  \n",
            "Texas                                   35.0  \n",
            "Arkansas                                36.0  \n",
            "Idaho                                   37.0  \n",
            "West Virginia                           38.0  \n",
            "Oregon                                  39.0  \n",
            "Utah                                    40.0  \n",
            "United States Virgin Islands            41.0  \n",
            "Northern Mariana Islands                42.0  \n",
            "Wyoming                                 43.0  \n",
            "Puerto Rico                             44.0  \n",
            "Guam                                    45.0  \n",
            "Montana                                 46.0  \n",
            "Alaska                                  47.0  \n",
            "American Samoa                          48.0  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Parallel computing is highly effective for computing per-capita mortality, as summing deaths and averaging populations across states are aggregation operations that can be parallelized. Dask efficiently distributes these tasks across multiple workers, significantly reducing computation time for large datasets. Grouping and aggregating are naturally parallelizable since each state’s data can be processed independently before final aggregation. However, performing the final ranking might require sorting, which can introduce a small sequential dependency. Despite this, the overall computation benefits from parallelization.\n",
        "\n",
        "\n",
        "I have analyzed COVID-19 mortality rates from January 1, 2020, to February 28, 2021, ranking US states based on per-capita mortality. First, filter data within the date range and compute total deaths per state along with the average population during that period. The per-capita mortality is calculated as (total deaths / average population), ensuring missing values do not affect results. Finally, I have ranked the states in descending order based on mortality rates, optimizing performance using Dask’s lazy execution. This provides an efficient way to compare state-wise impacts of the pandemic."
      ],
      "metadata": {
        "id": "auXjgO5OyaWl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert 'date' column to datetime format\n",
        "period_df['date'] = dd.to_datetime(period_df['date'])\n",
        "period_df['month_year'] = period_df['date'].dt.strftime('%Y-%m')\n",
        "\n",
        "# Define all expected months\n",
        "all_months = pd.date_range(start='2020-01', end='2021-02', freq='MS').strftime('%Y-%m')\n",
        "\n",
        "# Aggregate monthly total deaths and cases per state\n",
        "monthly_metrics = period_df.groupby(['state', 'month_year']).agg({\n",
        "    'deaths': 'sum',\n",
        "    'cases': 'sum'\n",
        "})\n",
        "\n",
        "# Compute results\n",
        "monthly_metrics = monthly_metrics.compute().reset_index()\n",
        "\n",
        "# Ensure all months exist for all states\n",
        "states = monthly_metrics['state'].unique()\n",
        "full_index = pd.MultiIndex.from_product([states, all_months], names=['state', 'month_year'])\n",
        "\n",
        "# Reindex to include missing months and fill missing values with 0\n",
        "monthly_metrics = monthly_metrics.set_index(['state', 'month_year']).reindex(full_index, fill_value=0).reset_index()\n",
        "\n",
        "# Calculate CFR (Case Fatality Rate), handling division by zero\n",
        "monthly_metrics['cfr'] = monthly_metrics['deaths'] / monthly_metrics['cases']\n",
        "monthly_metrics['cfr'].fillna(0)\n",
        "monthly_metrics['cfr'].replace([float('inf'), -float('inf')], 0)\n",
        "\n",
        "# Pivot to get 50 (states) × 14 (months) matrix\n",
        "cfr_matrix = monthly_metrics.pivot(index='state', columns='month_year', values='cfr')\n",
        "\n",
        "# Display the CFR matrix\n",
        "print(cfr_matrix)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_4aix7zNyewm",
        "outputId": "c29a28d1-98db-40c0-ee7b-1840f9c87f92"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "month_year                    2020-01   2020-02   2020-03   2020-04   2020-05  \\\n",
            "state                                                                           \n",
            "Alabama                           NaN       NaN  0.005324  0.029829  0.038967   \n",
            "Alaska                            NaN       NaN  0.000000  0.026795  0.024091   \n",
            "American Samoa                    NaN       NaN       NaN       NaN       NaN   \n",
            "Arizona                           0.0  0.000000  0.000000  0.029733  0.039077   \n",
            "Arkansas                          NaN       NaN  0.009231  0.018736  0.021011   \n",
            "Connecticut                       NaN       NaN  0.018184  0.064257  0.089880   \n",
            "Delaware                          NaN       NaN  0.013341  0.027265  0.036570   \n",
            "Georgia                           NaN       NaN  0.021317  0.038733  0.043180   \n",
            "Guam                              NaN       NaN  0.027027  0.036155  0.031863   \n",
            "Idaho                             NaN       NaN  0.014493  0.022646  0.030268   \n",
            "Iowa                              NaN       NaN  0.008664  0.023284  0.024344   \n",
            "Kansas                            NaN       NaN  0.009910  0.040343  0.022352   \n",
            "Louisiana                         NaN       NaN  0.039222  0.051921  0.071064   \n",
            "Maine                             NaN       NaN  0.005246  0.037681  0.041803   \n",
            "Maryland                          NaN       NaN  0.002610  0.040240  0.049705   \n",
            "Massachusetts                     NaN  0.000000  0.006948  0.043932  0.066140   \n",
            "Michigan                          NaN       NaN  0.025018  0.073078  0.095553   \n",
            "Minnesota                         NaN       NaN  0.000000  0.050521  0.046560   \n",
            "Mississippi                       NaN       NaN  0.015049  0.033739  0.045932   \n",
            "Missouri                          NaN       NaN  0.011916  0.031622  0.053485   \n",
            "Montana                           NaN       NaN  0.000000  0.017837  0.034431   \n",
            "Nevada                            NaN       NaN  0.020538  0.040652  0.049859   \n",
            "New Hampshire                     NaN       NaN  0.002688  0.027250  0.046269   \n",
            "New Jersey                        NaN       NaN  0.004018  0.041181  0.069171   \n",
            "New Mexico                        NaN       NaN  0.007053  0.029500  0.043279   \n",
            "New York                          NaN       NaN  0.004664  0.052730  0.062735   \n",
            "North Carolina                    NaN       NaN  0.003315  0.027220  0.034719   \n",
            "North Dakota                      NaN       NaN  0.002538  0.016863  0.022788   \n",
            "Northern Mariana Islands          NaN       NaN       NaN  0.144681  0.105691   \n",
            "Ohio                              NaN       NaN  0.015297  0.044515  0.058656   \n",
            "Oklahoma                          NaN       NaN  0.028348  0.054398  0.055308   \n",
            "Oregon                            NaN  0.000000  0.026629  0.036115  0.038384   \n",
            "Pennsylvania                      NaN       NaN  0.010831  0.032944  0.068775   \n",
            "Puerto Rico                       NaN       NaN       NaN  0.058089  0.045250   \n",
            "Rhode Island                      NaN       NaN  0.001524  0.024456  0.040354   \n",
            "South Carolina                    NaN       NaN  0.019643  0.028646  0.043432   \n",
            "South Dakota                      NaN       NaN  0.005650  0.004762  0.010749   \n",
            "Tennessee                         NaN       NaN  0.000340  0.019246  0.016537   \n",
            "Texas                             NaN  0.000000  0.011850  0.024013  0.027363   \n",
            "United States Virgin Islands      NaN       NaN       NaN  0.052239  0.078354   \n",
            "Utah                              NaN  0.000000  0.003548  0.008786  0.011058   \n",
            "Vermont                           NaN       NaN  0.034193  0.042302  0.056988   \n",
            "Virginia                          NaN       NaN  0.014071  0.030015  0.033158   \n",
            "Washington                        0.0  0.016667  0.049093  0.051323  0.053980   \n",
            "Washington, D.C.                  NaN       NaN  0.014369  0.037364  0.052647   \n",
            "West Virginia                     NaN       NaN  0.000000  0.021638  0.041085   \n",
            "Wisconsin                         NaN  0.000000  0.008523  0.044829  0.036253   \n",
            "Wyoming                           NaN       NaN  0.000000  0.008708  0.013089   \n",
            "\n",
            "month_year                     2020-06   2020-07  2020-08  2020-09  2020-10  \\\n",
            "state                                                                         \n",
            "Alabama                       0.029617  0.023956      NaN      NaN      NaN   \n",
            "Alaska                        0.013322  0.014205      NaN      NaN      NaN   \n",
            "American Samoa                     NaN       NaN      NaN      NaN      NaN   \n",
            "Arizona                       0.004230  0.019471      NaN      NaN      NaN   \n",
            "Arkansas                      0.015134  0.012545      NaN      NaN      NaN   \n",
            "Connecticut                   0.093442  0.092793      NaN      NaN      NaN   \n",
            "Delaware                      0.041941  0.043095      NaN      NaN      NaN   \n",
            "Georgia                       0.042942  0.031575      NaN      NaN      NaN   \n",
            "Guam                          0.027503  0.017743      NaN      NaN      NaN   \n",
            "Idaho                         0.022553  0.013814      NaN      NaN      NaN   \n",
            "Iowa                          0.026824  0.023590      NaN      NaN      NaN   \n",
            "Kansas                        0.021020  0.017688      NaN      NaN      NaN   \n",
            "Louisiana                     0.061746  0.052104      NaN      NaN      NaN   \n",
            "Maine                         0.035832  0.031594      NaN      NaN      NaN   \n",
            "Maryland                      0.046809  0.046820      NaN      NaN      NaN   \n",
            "Massachusetts                 0.072479  0.074312      NaN      NaN      NaN   \n",
            "Michigan                      0.090804  0.086169      NaN      NaN      NaN   \n",
            "Minnesota                     0.042079  0.039993      NaN      NaN      NaN   \n",
            "Mississippi                   0.044553  0.037303      NaN      NaN      NaN   \n",
            "Missouri                      0.056834  0.045034      NaN      NaN      NaN   \n",
            "Montana                       0.029372  0.020157      NaN      NaN      NaN   \n",
            "Nevada                        0.038312  0.025380      NaN      NaN      NaN   \n",
            "New Hampshire                 0.059883  0.064251      NaN      NaN      NaN   \n",
            "New Jersey                    0.077710  0.087727      NaN      NaN      NaN   \n",
            "New Mexico                    0.044082  0.040203      NaN      NaN      NaN   \n",
            "New York                      0.055624  0.062886      NaN      NaN      NaN   \n",
            "North Carolina                0.025122  0.019875      NaN      NaN      NaN   \n",
            "North Dakota                  0.023916  0.022755      NaN      NaN      NaN   \n",
            "Northern Mariana Islands      0.070423  0.065359      NaN      NaN      NaN   \n",
            "Ohio                          0.060250  0.052759      NaN      NaN      NaN   \n",
            "Oklahoma                      0.039071  0.026272      NaN      NaN      NaN   \n",
            "Oregon                        0.029448  0.022106      NaN      NaN      NaN   \n",
            "Pennsylvania                  0.075320  0.075818      NaN      NaN      NaN   \n",
            "Puerto Rico                   0.027735  0.019984      NaN      NaN      NaN   \n",
            "Rhode Island                  0.054395  0.056567      NaN      NaN      NaN   \n",
            "South Carolina                0.028947  0.019172      NaN      NaN      NaN   \n",
            "South Dakota                  0.012823  0.013827      NaN      NaN      NaN   \n",
            "Tennessee                     0.015148  0.012970      NaN      NaN      NaN   \n",
            "Texas                         0.020100  0.014024      NaN      NaN      NaN   \n",
            "United States Virgin Islands  0.083799  0.059761      NaN      NaN      NaN   \n",
            "Utah                          0.008857  0.007499      NaN      NaN      NaN   \n",
            "Vermont                       0.049756  0.045455      NaN      NaN      NaN   \n",
            "Virginia                      0.028627  0.028396      NaN      NaN      NaN   \n",
            "Washington                    0.043972  0.039423      NaN      NaN      NaN   \n",
            "Washington, D.C.              0.052898  0.053301      NaN      NaN      NaN   \n",
            "West Virginia                 0.036367  0.030102      NaN      NaN      NaN   \n",
            "Wisconsin                     0.029986  0.023905      NaN      NaN      NaN   \n",
            "Wyoming                       0.016462  0.012681      NaN      NaN      NaN   \n",
            "\n",
            "month_year                    2020-11  2020-12  2021-01  2021-02  \n",
            "state                                                             \n",
            "Alabama                           NaN      NaN      NaN      NaN  \n",
            "Alaska                            NaN      NaN      NaN      NaN  \n",
            "American Samoa                    NaN      NaN      NaN      NaN  \n",
            "Arizona                           NaN      NaN      NaN      NaN  \n",
            "Arkansas                          NaN      NaN      NaN      NaN  \n",
            "Connecticut                       NaN      NaN      NaN      NaN  \n",
            "Delaware                          NaN      NaN      NaN      NaN  \n",
            "Georgia                           NaN      NaN      NaN      NaN  \n",
            "Guam                              NaN      NaN      NaN      NaN  \n",
            "Idaho                             NaN      NaN      NaN      NaN  \n",
            "Iowa                              NaN      NaN      NaN      NaN  \n",
            "Kansas                            NaN      NaN      NaN      NaN  \n",
            "Louisiana                         NaN      NaN      NaN      NaN  \n",
            "Maine                             NaN      NaN      NaN      NaN  \n",
            "Maryland                          NaN      NaN      NaN      NaN  \n",
            "Massachusetts                     NaN      NaN      NaN      NaN  \n",
            "Michigan                          NaN      NaN      NaN      NaN  \n",
            "Minnesota                         NaN      NaN      NaN      NaN  \n",
            "Mississippi                       NaN      NaN      NaN      NaN  \n",
            "Missouri                          NaN      NaN      NaN      NaN  \n",
            "Montana                           NaN      NaN      NaN      NaN  \n",
            "Nevada                            NaN      NaN      NaN      NaN  \n",
            "New Hampshire                     NaN      NaN      NaN      NaN  \n",
            "New Jersey                        NaN      NaN      NaN      NaN  \n",
            "New Mexico                        NaN      NaN      NaN      NaN  \n",
            "New York                          NaN      NaN      NaN      NaN  \n",
            "North Carolina                    NaN      NaN      NaN      NaN  \n",
            "North Dakota                      NaN      NaN      NaN      NaN  \n",
            "Northern Mariana Islands          NaN      NaN      NaN      NaN  \n",
            "Ohio                              NaN      NaN      NaN      NaN  \n",
            "Oklahoma                          NaN      NaN      NaN      NaN  \n",
            "Oregon                            NaN      NaN      NaN      NaN  \n",
            "Pennsylvania                      NaN      NaN      NaN      NaN  \n",
            "Puerto Rico                       NaN      NaN      NaN      NaN  \n",
            "Rhode Island                      NaN      NaN      NaN      NaN  \n",
            "South Carolina                    NaN      NaN      NaN      NaN  \n",
            "South Dakota                      NaN      NaN      NaN      NaN  \n",
            "Tennessee                         NaN      NaN      NaN      NaN  \n",
            "Texas                             NaN      NaN      NaN      NaN  \n",
            "United States Virgin Islands      NaN      NaN      NaN      NaN  \n",
            "Utah                              NaN      NaN      NaN      NaN  \n",
            "Vermont                           NaN      NaN      NaN      NaN  \n",
            "Virginia                          NaN      NaN      NaN      NaN  \n",
            "Washington                        NaN      NaN      NaN      NaN  \n",
            "Washington, D.C.                  NaN      NaN      NaN      NaN  \n",
            "West Virginia                     NaN      NaN      NaN      NaN  \n",
            "Wisconsin                         NaN      NaN      NaN      NaN  \n",
            "Wyoming                           NaN      NaN      NaN      NaN  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Computing the CFR per month requires multiple steps, including grouping, aggregation, and pivoting, where parallelization is mostly beneficial. In this analysis, I have computed the Case Fatality Rate (CFR) per month for each US state from January 2020 to February 2021. First extract month-year from the date column and group data by state and month. Instead of using the last recorded cases and deaths, compute their monthly cumulative sums to ensure better accuracy. CFR is then calculated as (total deaths / total cases per month). To avoid division errors, handle cases where cases = 0 and replace infinite values with None. The final output is a 50 (states) × 14 (months) matrix, making it easy to compare CFR trends over time. This approach assumes accurate and complete data reporting, and does not account for delays in case-to-death progression. It also assumes deaths in a given month are related to cases from the same month."
      ],
      "metadata": {
        "id": "1rrbMBTGyqLo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Ensure month columns are recognized as datetime (optional safety step)\n",
        "cfr_matrix.columns = pd.to_datetime(cfr_matrix.columns, format='%Y-%m')\n",
        "\n",
        "# Compute month-to-month CFR changes\n",
        "cfr_changes = cfr_matrix.diff(axis=1).fillna(0)\n",
        "\n",
        "# Aggregate total fluctuations (absolute changes)\n",
        "total_change = cfr_changes.abs().sum(axis=1)\n",
        "\n",
        "# Rank states based on CFR fluctuation\n",
        "cfr_rankings = total_change.rank(ascending=False)\n",
        "\n",
        "# Sort and display rankings\n",
        "print(cfr_rankings.sort_values())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ibILdf63yt67",
        "outputId": "7226ba1d-d3d0-4c74-c818-5e4e53838adc"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "state\n",
            "Arizona                          1.0\n",
            "New Jersey                       2.0\n",
            "Michigan                         3.0\n",
            "Northern Mariana Islands         4.0\n",
            "Connecticut                      5.0\n",
            "Massachusetts                    6.0\n",
            "New York                         7.0\n",
            "Washington                       8.0\n",
            "Wisconsin                        9.0\n",
            "Pennsylvania                    10.0\n",
            "New Hampshire                   11.0\n",
            "Minnesota                       12.0\n",
            "Missouri                        13.0\n",
            "Oklahoma                        14.0\n",
            "United States Virgin Islands    15.0\n",
            "Rhode Island                    16.0\n",
            "Oregon                          17.0\n",
            "Nevada                          18.0\n",
            "Kansas                          19.0\n",
            "Ohio                            20.0\n",
            "West Virginia                   21.0\n",
            "Louisiana                       22.0\n",
            "Maryland                        23.0\n",
            "Montana                         24.0\n",
            "Alabama                         25.0\n",
            "South Carolina                  26.0\n",
            "Maine                           27.0\n",
            "North Carolina                  28.0\n",
            "Alaska                          29.0\n",
            "New Mexico                      30.0\n",
            "Texas                           31.0\n",
            "Mississippi                     32.0\n",
            "Washington, D.C.                33.0\n",
            "Puerto Rico                     34.0\n",
            "Vermont                         35.0\n",
            "Georgia                         36.0\n",
            "Idaho                           37.0\n",
            "Delaware                        38.0\n",
            "Guam                            39.0\n",
            "Tennessee                       40.0\n",
            "Virginia                        41.0\n",
            "North Dakota                    42.0\n",
            "Iowa                            43.0\n",
            "Arkansas                        44.0\n",
            "Wyoming                         45.0\n",
            "Utah                            46.0\n",
            "South Dakota                    47.0\n",
            "American Samoa                  48.0\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Ranking states based on month-to-month CFR changes involves computing differences, taking absolute sums, and ranking them. The difference operation is parallelizable since each month’s CFR values can be processed independently. Aggregating the absolute changes across months is also well-suited for parallel execution, as each state’s computation is independent. However, the final ranking step requires sorting, which introduces some sequential dependencies that can limit parallel efficiency.\n",
        "\n",
        "First analyze month-to-month changes in the Case Fatality Rate (CFR) across states. It first ensures that column names representing months are treated as datetime values, preventing errors in time-based operations. The diff(axis=1) function calculates the difference between consecutive months, identifying increases or decreases in CFR. Missing values from the first month are filled with zero to maintain consistency. The abs().sum(axis=1) step aggregates total fluctuations in CFR for each state, capturing overall volatility. Ranking states based on these fluctuations helps identify those with the most unstable CFR trends. Sorting the rankings in descending order highlights states with higher CFR variability. This method helps in tracking pandemic severity changes over time. The approach efficiently summarizes trends across multiple states while preserving temporal variations."
      ],
      "metadata": {
        "id": "dtoMMh7HyyxO"
      }
    }
  ]
}